
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> set.seed(290875)
> library("party")
Loading required package: grid
Loading required package: mvtnorm
Loading required package: modeltools
Loading required package: stats4
Loading required package: strucchange
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: sandwich
> if (!require("TH.data"))
+     stop("cannot load package TH.data")
Loading required package: TH.data
> if (!require("coin"))
+     stop("cannot load package coin")
Loading required package: coin
Loading required package: survival
> 
> data("GlaucomaM", package = "TH.data")
> rf <- cforest(Class ~ ., data = GlaucomaM, control = cforest_unbiased(ntree = 30))
> stopifnot(mean(GlaucomaM$Class != predict(rf)) < 
+           mean(GlaucomaM$Class != predict(rf, OOB = TRUE)))
> 
> data("GBSG2", package = "TH.data")
> rfS <- cforest(Surv(time, cens) ~ ., data = GBSG2, control = cforest_unbiased(ntree = 30))
> treeresponse(rfS, newdata = GBSG2[1:2,])
$`1`
Call: survfit(formula = y ~ 1, weights = weights)

records       n  events  median 0.95LCL 0.95UCL 
    146     402     213    1753    1601    1814 

$`2`
Call: survfit(formula = y ~ 1, weights = weights)

records       n  events  median 0.95LCL 0.95UCL 
    148     393     176    1975    1502    2015 

> 
> ### give it a try, at least
> varimp(rf, pre1.0_0 = TRUE)
           ag            at            as            an            ai 
 0.0000000000 -0.0023148148  0.0009259259  0.0009259259  0.0078703704 
          eag           eat           eas           ean           eai 
 0.0000000000  0.0000000000  0.0000000000  0.0013888889 -0.0009259259 
         abrg          abrt          abrs          abrn          abri 
 0.0000000000  0.0000000000  0.0032407407  0.0027777778  0.0041666667 
          hic          mhcg          mhct          mhcs          mhcn 
 0.0060185185  0.0000000000  0.0013888889 -0.0004629630  0.0027777778 
         mhci          phcg          phct          phcs          phcn 
 0.0078703704  0.0060185185  0.0000000000  0.0004629630  0.0018518519 
         phci           hvc          vbsg          vbst          vbss 
 0.0166666667  0.0032407407  0.0032407407  0.0013888889  0.0000000000 
         vbsn          vbsi          vasg          vast          vass 
 0.0000000000  0.0000000000  0.0000000000  0.0000000000  0.0000000000 
         vasn          vasi          vbrg          vbrt          vbrs 
 0.0000000000  0.0046296296  0.0000000000  0.0018518519  0.0004629630 
         vbrn          vbri          varg          vart          vars 
 0.0032407407  0.0004629630  0.0351851852  0.0000000000  0.0245370370 
         varn          vari           mdg           mdt           mds 
 0.0129629630  0.0481481481  0.0000000000  0.0000000000 -0.0013888889 
          mdn           mdi           tmg           tmt           tms 
 0.0000000000  0.0000000000  0.0273148148  0.0000000000  0.0097222222 
          tmn           tmi            mr           rnf          mdic 
-0.0023148148  0.0226851852  0.0000000000  0.0037037037  0.0055555556 
          emd            mv 
 0.0000000000 -0.0009259259 
> 
> P <- proximity(rf)
> stopifnot(max(abs(P - t(P))) == 0)
> 
> P[1:10,1:10]
            2         43        25        65         70         16         6
2  1.00000000 0.15384615 0.7500000 0.0000000 0.07142857 0.13333333 0.7142857
43 0.15384615 1.00000000 0.1818182 0.0000000 0.11111111 0.45454545 0.1111111
25 0.75000000 0.18181818 1.0000000 0.1818182 0.11111111 0.14285714 0.8000000
65 0.00000000 0.00000000 0.1818182 1.0000000 0.00000000 0.00000000 0.1666667
70 0.07142857 0.11111111 0.1111111 0.0000000 1.00000000 0.00000000 0.1428571
16 0.13333333 0.45454545 0.1428571 0.0000000 0.00000000 1.00000000 0.0000000
6  0.71428571 0.11111111 0.8000000 0.1666667 0.14285714 0.00000000 1.0000000
5  0.58823529 0.09090909 0.7692308 0.5000000 0.09090909 0.08333333 0.5000000
12 0.44444444 0.00000000 0.5714286 0.5833333 0.07692308 0.06666667 0.3333333
63 0.46153846 0.10000000 0.5000000 0.2222222 0.00000000 0.18181818 0.5000000
            5         12        63
2  0.58823529 0.44444444 0.4615385
43 0.09090909 0.00000000 0.1000000
25 0.76923077 0.57142857 0.5000000
65 0.50000000 0.58333333 0.2222222
70 0.09090909 0.07692308 0.0000000
16 0.08333333 0.06666667 0.1818182
6  0.50000000 0.33333333 0.5000000
5  1.00000000 0.76923077 0.5454545
12 0.76923077 1.00000000 0.5714286
63 0.54545455 0.57142857 1.0000000
> 
> ### variable importances
> a <- cforest(Species ~ ., data = iris,
+              control = cforest_unbiased(mtry = 2, ntree = 10))
> varimp(a, pre1.0_0 = TRUE)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
  0.06181818   0.00000000   0.20727273   0.33636364 
> varimp(a, conditional = TRUE)
Sepal.Length  Sepal.Width Petal.Length  Petal.Width 
 0.007272727  0.000000000  0.103636364  0.243636364 
> 
> airq <- subset(airquality, complete.cases(airquality))
> a <- cforest(Ozone ~ ., data = airq,
+              control = cforest_unbiased(mtry = 2, ntree = 10))
> varimp(a, pre1.0_0 = TRUE)   
  Solar.R      Wind      Temp     Month       Day 
137.76700 550.19004 295.40387  16.21802   5.42690 
> varimp(a, conditional = TRUE)
   Solar.R       Wind       Temp      Month        Day 
 67.713060 341.413307 227.670123   4.257196   3.204209 
> 
> data("mammoexp", package = "TH.data")
> a <- cforest(ME ~ ., data = mammoexp, control = cforest_classical(ntree = 10))
> varimp(a, pre1.0_0 = TRUE)   
     SYMPT         PB       HIST        BSE       DECT 
0.02466021 0.01046237 0.01607246 0.01045324 0.00133305 
> varimp(a, conditional = TRUE)
      SYMPT          PB        HIST         BSE        DECT 
0.019882337 0.009532482 0.006163146 0.007732481 0.003382481 
> 
> stopifnot(all.equal(unique(sapply(a@weights, sum)), nrow(mammoexp)))
> 
> ### check user-defined weights
> nobs <- nrow(GlaucomaM)
> i <- rep(0.0, nobs)
> i[1:floor(.632 * nobs)] <- 1
> folds <- replicate(100, sample(i))
> rf2 <- cforest(Class ~ ., data = GlaucomaM, control = cforest_unbiased(ntree = 100), weights = folds)
> table(predict(rf), predict(rf2))
          
           glaucoma normal
  glaucoma       89      4
  normal          1    102
> 
> proc.time()
   user  system elapsed 
  2.248   0.022   2.263 
